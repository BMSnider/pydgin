#=========================================================================
# TravisCI Setup
#=========================================================================

# To enable containers:

sudo: false

#-------------------------------------------------------------------------
# language and build matric
#-------------------------------------------------------------------------

language: python
python:
 - "2.7"
 # - "pypy"

#-------------------------------------------------------------------------
# environment
#-------------------------------------------------------------------------

env:
  global:
    - PYDGIN_PYPY_SRC_DIR="$TRAVIS_BUILD_DIR/../pypy-4.0.1-src"

#-------------------------------------------------------------------------
# install dependencies
#-------------------------------------------------------------------------

install:

# we need cffi
 - pip install cffi
# download and untar pypy source
 - pwd
 - cd ..
 - wget https://bitbucket.org/pypy/pypy/downloads/pypy-4.0.1-src.tar.bz2
 - tar xjf pypy-4.0.1-src.tar.bz2
# clone precompiled binaries for testing and copy
 - git clone https://github.com/cornell-brg/pydgin-precompiled.git
 - cp -r pydgin-precompiled/ubmark-nosyscalls/build-arm pydgin/ubmark-nosyscalls
 - cp -r pydgin-precompiled/ubmark-nosyscalls/build-parc pydgin/ubmark-nosyscalls
 - cp -r pydgin-precompiled/ubmark-nosyscalls/build-riscv pydgin/ubmark-nosyscalls
 - cp -r pydgin-precompiled/arm/asm_tests/build pydgin/arm/asm_tests
 - cp -r pydgin-precompiled/parc/asm_tests/build pydgin/parc/asm_tests
 - mkdir pydgin/riscv/asm_tests
 - cp -r pydgin-precompiled/riscv/asm_tests/build pydgin/riscv/asm_tests
# create the build directory
# TODO: once we have proper tests, building pydgins should go here too
 - cd pydgin
 - mkdir -p build

#-------------------------------------------------------------------------
# test runner
#-------------------------------------------------------------------------

script:

# TODO: remove this
 - ls -RF
 - cd build
# build softfloat before tests because riscv needs it
 - ../scripts/build-softfloat.py
# TODO: remove this
 - ls -RF ..
# first run interpretive tests so that we can fail fast
 - cd ../parc; py.test -v
 - cd ../arm; py.test -v
 - cd ../riscv; py.test -v
 - cd ../build
# then build nojit versions of programs and re-run tests
 - ../scripts/build.py --batch pydgin-parc-nojit-debug pydgin-arm-nojit-debug pydgin-riscv-nojit-debug
# TODO: remove this
 - ls -RF ..
 - cd ../parc; py.test -v
 - cd ../arm; py.test -v
 - cd ../riscv; py.test -v
 - cd ../build
# finally build jit versions of programs and re-run tests
 - ../scripts/build.py --batch pydgin-parc-jit pydgin-arm-jit pydgin-riscv-jit
 - cd ../parc; py.test -v
 - cd ../arm; py.test -v
 - cd ../riscv; py.test -v

